// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buildfarm.proto

package build.buildfarm.v1test;

/**
 * Protobuf type {@code build.buildfarm.v1test.RedisShardBackplaneConfig}
 */
public  final class RedisShardBackplaneConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:build.buildfarm.v1test.RedisShardBackplaneConfig)
    RedisShardBackplaneConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RedisShardBackplaneConfig.newBuilder() to construct.
  private RedisShardBackplaneConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RedisShardBackplaneConfig() {
    redisUri_ = "";
    redisPassword_ = "";
    workersHashName_ = "";
    workerChannel_ = "";
    actionCachePrefix_ = "";
    actionBlacklistPrefix_ = "";
    invocationBlacklistPrefix_ = "";
    operationPrefix_ = "";
    preQueuedOperationsListName_ = "";
    processingListName_ = "";
    processingPrefix_ = "";
    queuedOperationsListName_ = "";
    dispatchingPrefix_ = "";
    dispatchedOperationsHashName_ = "";
    operationChannelPrefix_ = "";
    casPrefix_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RedisShardBackplaneConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RedisShardBackplaneConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            redisUri_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            workersHashName_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            actionCachePrefix_ = s;
            break;
          }
          case 32: {

            actionCacheExpire_ = input.readInt32();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            operationPrefix_ = s;
            break;
          }
          case 48: {

            operationExpire_ = input.readInt32();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            queuedOperationsListName_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            dispatchedOperationsHashName_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            operationChannelPrefix_ = s;
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            casPrefix_ = s;
            break;
          }
          case 88: {

            casExpire_ = input.readInt32();
            break;
          }
          case 120: {

            jedisPoolMaxTotal_ = input.readInt32();
            break;
          }
          case 128: {

            maxQueueDepth_ = input.readInt32();
            break;
          }
          case 136: {

            maxPreQueueDepth_ = input.readInt32();
            break;
          }
          case 146: {
            java.lang.String s = input.readStringRequireUtf8();

            preQueuedOperationsListName_ = s;
            break;
          }
          case 154: {
            java.lang.String s = input.readStringRequireUtf8();

            processingListName_ = s;
            break;
          }
          case 162: {
            java.lang.String s = input.readStringRequireUtf8();

            processingPrefix_ = s;
            break;
          }
          case 168: {

            processingTimeoutMillis_ = input.readInt32();
            break;
          }
          case 186: {
            java.lang.String s = input.readStringRequireUtf8();

            dispatchingPrefix_ = s;
            break;
          }
          case 192: {

            dispatchingTimeoutMillis_ = input.readInt32();
            break;
          }
          case 202: {
            java.lang.String s = input.readStringRequireUtf8();

            workerChannel_ = s;
            break;
          }
          case 208: {

            subscribeToBackplane_ = input.readBool();
            break;
          }
          case 216: {

            runFailsafeOperation_ = input.readBool();
            break;
          }
          case 226: {
            java.lang.String s = input.readStringRequireUtf8();

            actionBlacklistPrefix_ = s;
            break;
          }
          case 232: {

            actionBlacklistExpire_ = input.readInt32();
            break;
          }
          case 242: {
            java.lang.String s = input.readStringRequireUtf8();

            invocationBlacklistPrefix_ = s;
            break;
          }
          case 250: {
            build.buildfarm.v1test.ProvisionedQueuesConfig.Builder subBuilder = null;
            if (provisionedQueues_ != null) {
              subBuilder = provisionedQueues_.toBuilder();
            }
            provisionedQueues_ = input.readMessage(build.buildfarm.v1test.ProvisionedQueuesConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(provisionedQueues_);
              provisionedQueues_ = subBuilder.buildPartial();
            }

            break;
          }
          case 256: {

            timeout_ = input.readInt32();
            break;
          }
          case 264: {

            maxAttempts_ = input.readInt32();
            break;
          }
          case 274: {
            java.lang.String s = input.readStringRequireUtf8();

            redisPassword_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return build.buildfarm.v1test.OperationQueueProto.internal_static_build_buildfarm_v1test_RedisShardBackplaneConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return build.buildfarm.v1test.OperationQueueProto.internal_static_build_buildfarm_v1test_RedisShardBackplaneConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            build.buildfarm.v1test.RedisShardBackplaneConfig.class, build.buildfarm.v1test.RedisShardBackplaneConfig.Builder.class);
  }

  public static final int REDIS_URI_FIELD_NUMBER = 1;
  private volatile java.lang.Object redisUri_;
  /**
   * <pre>
   * the uri endpoint of the redis target. This must be a single host entry
   * with cluster discoverability enabled if the redis service is configured
   * for cluster operation. If the endpoint is a singleton redis node, cluster
   * adaptive behaviors, specifically queue balancing, will be emulated.
   * </pre>
   *
   * <code>string redis_uri = 1;</code>
   */
  public java.lang.String getRedisUri() {
    java.lang.Object ref = redisUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      redisUri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the uri endpoint of the redis target. This must be a single host entry
   * with cluster discoverability enabled if the redis service is configured
   * for cluster operation. If the endpoint is a singleton redis node, cluster
   * adaptive behaviors, specifically queue balancing, will be emulated.
   * </pre>
   *
   * <code>string redis_uri = 1;</code>
   */
  public com.google.protobuf.ByteString
      getRedisUriBytes() {
    java.lang.Object ref = redisUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      redisUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REDIS_PASSWORD_FIELD_NUMBER = 34;
  private volatile java.lang.Object redisPassword_;
  /**
   * <pre>
   * the password used to authenticate to redis via `auth`
   * </pre>
   *
   * <code>string redis_password = 34;</code>
   */
  public java.lang.String getRedisPassword() {
    java.lang.Object ref = redisPassword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      redisPassword_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the password used to authenticate to redis via `auth`
   * </pre>
   *
   * <code>string redis_password = 34;</code>
   */
  public com.google.protobuf.ByteString
      getRedisPasswordBytes() {
    java.lang.Object ref = redisPassword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      redisPassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int JEDIS_POOL_MAX_TOTAL_FIELD_NUMBER = 15;
  private int jedisPoolMaxTotal_;
  /**
   * <pre>
   * the size of the pool of jedis connections per-cluster-member
   * </pre>
   *
   * <code>int32 jedis_pool_max_total = 15;</code>
   */
  public int getJedisPoolMaxTotal() {
    return jedisPoolMaxTotal_;
  }

  public static final int WORKERS_HASH_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object workersHashName_;
  /**
   * <pre>
   * the hash of active cas shards. Shards must update a self-reported expiry
   * regularly or face deactivation and excommunication. Advertisements for
   * contents on deactivated workers may be pruned.
   * </pre>
   *
   * <code>string workers_hash_name = 2;</code>
   */
  public java.lang.String getWorkersHashName() {
    java.lang.Object ref = workersHashName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      workersHashName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the hash of active cas shards. Shards must update a self-reported expiry
   * regularly or face deactivation and excommunication. Advertisements for
   * contents on deactivated workers may be pruned.
   * </pre>
   *
   * <code>string workers_hash_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getWorkersHashNameBytes() {
    java.lang.Object ref = workersHashName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      workersHashName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WORKER_CHANNEL_FIELD_NUMBER = 25;
  private volatile java.lang.Object workerChannel_;
  /**
   * <pre>
   * the channel used to communicate cas shard structural changes
   * </pre>
   *
   * <code>string worker_channel = 25;</code>
   */
  public java.lang.String getWorkerChannel() {
    java.lang.Object ref = workerChannel_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      workerChannel_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the channel used to communicate cas shard structural changes
   * </pre>
   *
   * <code>string worker_channel = 25;</code>
   */
  public com.google.protobuf.ByteString
      getWorkerChannelBytes() {
    java.lang.Object ref = workerChannel_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      workerChannel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACTION_CACHE_PREFIX_FIELD_NUMBER = 3;
  private volatile java.lang.Object actionCachePrefix_;
  /**
   * <pre>
   * the prefix of keys which map action keys to action results
   * </pre>
   *
   * <code>string action_cache_prefix = 3;</code>
   */
  public java.lang.String getActionCachePrefix() {
    java.lang.Object ref = actionCachePrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      actionCachePrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of keys which map action keys to action results
   * </pre>
   *
   * <code>string action_cache_prefix = 3;</code>
   */
  public com.google.protobuf.ByteString
      getActionCachePrefixBytes() {
    java.lang.Object ref = actionCachePrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      actionCachePrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACTION_CACHE_EXPIRE_FIELD_NUMBER = 4;
  private int actionCacheExpire_;
  /**
   * <pre>
   * the expiration time in seconds for action cache entries
   * </pre>
   *
   * <code>int32 action_cache_expire = 4;</code>
   */
  public int getActionCacheExpire() {
    return actionCacheExpire_;
  }

  public static final int ACTION_BLACKLIST_PREFIX_FIELD_NUMBER = 28;
  private volatile java.lang.Object actionBlacklistPrefix_;
  /**
   * <pre>
   * the prefix of keys which identify actions that are to be rejected
   * from any request endpoint
   * </pre>
   *
   * <code>string action_blacklist_prefix = 28;</code>
   */
  public java.lang.String getActionBlacklistPrefix() {
    java.lang.Object ref = actionBlacklistPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      actionBlacklistPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of keys which identify actions that are to be rejected
   * from any request endpoint
   * </pre>
   *
   * <code>string action_blacklist_prefix = 28;</code>
   */
  public com.google.protobuf.ByteString
      getActionBlacklistPrefixBytes() {
    java.lang.Object ref = actionBlacklistPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      actionBlacklistPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACTION_BLACKLIST_EXPIRE_FIELD_NUMBER = 29;
  private int actionBlacklistExpire_;
  /**
   * <pre>
   * the expiration time in seconds for banned actions
   * </pre>
   *
   * <code>int32 action_blacklist_expire = 29;</code>
   */
  public int getActionBlacklistExpire() {
    return actionBlacklistExpire_;
  }

  public static final int INVOCATION_BLACKLIST_PREFIX_FIELD_NUMBER = 30;
  private volatile java.lang.Object invocationBlacklistPrefix_;
  /**
   * <pre>
   * the prefix of keys which identify invocations that are to be rejected
   * from any request endpoint
   * </pre>
   *
   * <code>string invocation_blacklist_prefix = 30;</code>
   */
  public java.lang.String getInvocationBlacklistPrefix() {
    java.lang.Object ref = invocationBlacklistPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      invocationBlacklistPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of keys which identify invocations that are to be rejected
   * from any request endpoint
   * </pre>
   *
   * <code>string invocation_blacklist_prefix = 30;</code>
   */
  public com.google.protobuf.ByteString
      getInvocationBlacklistPrefixBytes() {
    java.lang.Object ref = invocationBlacklistPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      invocationBlacklistPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_PREFIX_FIELD_NUMBER = 5;
  private volatile java.lang.Object operationPrefix_;
  /**
   * <pre>
   * the prefix of keys used to retain current Operation state
   * </pre>
   *
   * <code>string operation_prefix = 5;</code>
   */
  public java.lang.String getOperationPrefix() {
    java.lang.Object ref = operationPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of keys used to retain current Operation state
   * </pre>
   *
   * <code>string operation_prefix = 5;</code>
   */
  public com.google.protobuf.ByteString
      getOperationPrefixBytes() {
    java.lang.Object ref = operationPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operationPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_EXPIRE_FIELD_NUMBER = 6;
  private int operationExpire_;
  /**
   * <pre>
   * the expiration time in seconds for operation keys
   * </pre>
   *
   * <code>int32 operation_expire = 6;</code>
   */
  public int getOperationExpire() {
    return operationExpire_;
  }

  public static final int PRE_QUEUED_OPERATIONS_LIST_NAME_FIELD_NUMBER = 18;
  private volatile java.lang.Object preQueuedOperationsListName_;
  /**
   * <pre>
   * the arrival queue. Contains ExecuteEntry messages
   * </pre>
   *
   * <code>string pre_queued_operations_list_name = 18;</code>
   */
  public java.lang.String getPreQueuedOperationsListName() {
    java.lang.Object ref = preQueuedOperationsListName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      preQueuedOperationsListName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the arrival queue. Contains ExecuteEntry messages
   * </pre>
   *
   * <code>string pre_queued_operations_list_name = 18;</code>
   */
  public com.google.protobuf.ByteString
      getPreQueuedOperationsListNameBytes() {
    java.lang.Object ref = preQueuedOperationsListName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      preQueuedOperationsListName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSING_LIST_NAME_FIELD_NUMBER = 19;
  private volatile java.lang.Object processingListName_;
  /**
   * <pre>
   * the atomic target list for reliable arrival queue removal
   * </pre>
   *
   * <code>string processing_list_name = 19;</code>
   */
  public java.lang.String getProcessingListName() {
    java.lang.Object ref = processingListName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processingListName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the atomic target list for reliable arrival queue removal
   * </pre>
   *
   * <code>string processing_list_name = 19;</code>
   */
  public com.google.protobuf.ByteString
      getProcessingListNameBytes() {
    java.lang.Object ref = processingListName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      processingListName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSING_PREFIX_FIELD_NUMBER = 20;
  private volatile java.lang.Object processingPrefix_;
  /**
   * <pre>
   * the prefix of the processing list timeout monitor key
   * </pre>
   *
   * <code>string processing_prefix = 20;</code>
   */
  public java.lang.String getProcessingPrefix() {
    java.lang.Object ref = processingPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processingPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of the processing list timeout monitor key
   * </pre>
   *
   * <code>string processing_prefix = 20;</code>
   */
  public com.google.protobuf.ByteString
      getProcessingPrefixBytes() {
    java.lang.Object ref = processingPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      processingPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSING_TIMEOUT_MILLIS_FIELD_NUMBER = 21;
  private int processingTimeoutMillis_;
  /**
   * <pre>
   * the minimum timeout for an operation to be removed from the processing list
   * upon leaving the arrival queue
   * </pre>
   *
   * <code>int32 processing_timeout_millis = 21;</code>
   */
  public int getProcessingTimeoutMillis() {
    return processingTimeoutMillis_;
  }

  public static final int QUEUED_OPERATIONS_LIST_NAME_FIELD_NUMBER = 7;
  private volatile java.lang.Object queuedOperationsListName_;
  /**
   * <pre>
   * the ready-to-run operation queue. Contains QueueEntry messages
   * </pre>
   *
   * <code>string queued_operations_list_name = 7;</code>
   */
  public java.lang.String getQueuedOperationsListName() {
    java.lang.Object ref = queuedOperationsListName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      queuedOperationsListName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the ready-to-run operation queue. Contains QueueEntry messages
   * </pre>
   *
   * <code>string queued_operations_list_name = 7;</code>
   */
  public com.google.protobuf.ByteString
      getQueuedOperationsListNameBytes() {
    java.lang.Object ref = queuedOperationsListName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      queuedOperationsListName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DISPATCHING_PREFIX_FIELD_NUMBER = 23;
  private volatile java.lang.Object dispatchingPrefix_;
  /**
   * <pre>
   * the prefix of the dispatching list timeout monitor key
   * </pre>
   *
   * <code>string dispatching_prefix = 23;</code>
   */
  public java.lang.String getDispatchingPrefix() {
    java.lang.Object ref = dispatchingPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dispatchingPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of the dispatching list timeout monitor key
   * </pre>
   *
   * <code>string dispatching_prefix = 23;</code>
   */
  public com.google.protobuf.ByteString
      getDispatchingPrefixBytes() {
    java.lang.Object ref = dispatchingPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dispatchingPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DISPATCHING_TIMEOUT_MILLIS_FIELD_NUMBER = 24;
  private int dispatchingTimeoutMillis_;
  /**
   * <pre>
   * the minimum timeout for an operation to be observable in the dispatched
   * hash upon leaving the ready-to-run queue.
   * </pre>
   *
   * <code>int32 dispatching_timeout_millis = 24;</code>
   */
  public int getDispatchingTimeoutMillis() {
    return dispatchingTimeoutMillis_;
  }

  public static final int DISPATCHED_OPERATIONS_HASH_NAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object dispatchedOperationsHashName_;
  /**
   * <pre>
   * the hash key of dispatched operations. all operations which have been
   * removed from the ready-to-run queue should make their way here in a timely
   * (per dispatching) fashion.
   * </pre>
   *
   * <code>string dispatched_operations_hash_name = 8;</code>
   */
  public java.lang.String getDispatchedOperationsHashName() {
    java.lang.Object ref = dispatchedOperationsHashName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dispatchedOperationsHashName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the hash key of dispatched operations. all operations which have been
   * removed from the ready-to-run queue should make their way here in a timely
   * (per dispatching) fashion.
   * </pre>
   *
   * <code>string dispatched_operations_hash_name = 8;</code>
   */
  public com.google.protobuf.ByteString
      getDispatchedOperationsHashNameBytes() {
    java.lang.Object ref = dispatchedOperationsHashName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dispatchedOperationsHashName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_CHANNEL_PREFIX_FIELD_NUMBER = 9;
  private volatile java.lang.Object operationChannelPrefix_;
  /**
   * <pre>
   * the prefix of operation update topics
   * </pre>
   *
   * <code>string operation_channel_prefix = 9;</code>
   */
  public java.lang.String getOperationChannelPrefix() {
    java.lang.Object ref = operationChannelPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationChannelPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of operation update topics
   * </pre>
   *
   * <code>string operation_channel_prefix = 9;</code>
   */
  public com.google.protobuf.ByteString
      getOperationChannelPrefixBytes() {
    java.lang.Object ref = operationChannelPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operationChannelPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CAS_PREFIX_FIELD_NUMBER = 10;
  private volatile java.lang.Object casPrefix_;
  /**
   * <pre>
   * the prefix of cas set keys. A cas set for a key suffixed with a digest
   * address, contain the shards which have advertised storage of the
   * addressed content. This set of valid shards for a digest must intersect
   * with the active shard list (workers)
   * </pre>
   *
   * <code>string cas_prefix = 10;</code>
   */
  public java.lang.String getCasPrefix() {
    java.lang.Object ref = casPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      casPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the prefix of cas set keys. A cas set for a key suffixed with a digest
   * address, contain the shards which have advertised storage of the
   * addressed content. This set of valid shards for a digest must intersect
   * with the active shard list (workers)
   * </pre>
   *
   * <code>string cas_prefix = 10;</code>
   */
  public com.google.protobuf.ByteString
      getCasPrefixBytes() {
    java.lang.Object ref = casPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      casPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CAS_EXPIRE_FIELD_NUMBER = 11;
  private int casExpire_;
  /**
   * <pre>
   * the expiration time in seconds for cas sets
   * </pre>
   *
   * <code>int32 cas_expire = 11;</code>
   */
  public int getCasExpire() {
    return casExpire_;
  }

  public static final int SUBSCRIBE_TO_BACKPLANE_FIELD_NUMBER = 26;
  private boolean subscribeToBackplane_;
  /**
   * <pre>
   * whether to listen to the backplane communication streams for shard
   * lifecycle events and watched operations. This is required for failsafe
   * operation below and realtime notification for watched operations. This is
   * nearly required for schedulers, and may be useful elsewhere
   * </pre>
   *
   * <code>bool subscribe_to_backplane = 26;</code>
   */
  public boolean getSubscribeToBackplane() {
    return subscribeToBackplane_;
  }

  public static final int RUN_FAILSAFE_OPERATION_FIELD_NUMBER = 27;
  private boolean runFailsafeOperation_;
  /**
   * <pre>
   * whether to run the failsafe operation monitor, which establishes watchdogs
   * on watched operations, to ensure they are in a known or recently refreshed
   * state, and guaranteeing a watch's termination on expiry
   * This monitor also effects processing/dispatching expirations globally,
   * required to ensure queue reliability. This is recommended for schedulers,
   * meaningless for others
   * </pre>
   *
   * <code>bool run_failsafe_operation = 27;</code>
   */
  public boolean getRunFailsafeOperation() {
    return runFailsafeOperation_;
  }

  public static final int MAX_QUEUE_DEPTH_FIELD_NUMBER = 16;
  private int maxQueueDepth_;
  /**
   * <pre>
   * the maximum size allowed for the ready-to-run queue before rejection
   * </pre>
   *
   * <code>int32 max_queue_depth = 16;</code>
   */
  public int getMaxQueueDepth() {
    return maxQueueDepth_;
  }

  public static final int MAX_PRE_QUEUE_DEPTH_FIELD_NUMBER = 17;
  private int maxPreQueueDepth_;
  /**
   * <pre>
   * the maximum size allowed for the arrival queue before rejection
   * </pre>
   *
   * <code>int32 max_pre_queue_depth = 17;</code>
   */
  public int getMaxPreQueueDepth() {
    return maxPreQueueDepth_;
  }

  public static final int PROVISIONED_QUEUES_FIELD_NUMBER = 31;
  private build.buildfarm.v1test.ProvisionedQueuesConfig provisionedQueues_;
  /**
   * <pre>
   * the provisioned queue definitions for platform partitioning
   * </pre>
   *
   * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
   */
  public boolean hasProvisionedQueues() {
    return provisionedQueues_ != null;
  }
  /**
   * <pre>
   * the provisioned queue definitions for platform partitioning
   * </pre>
   *
   * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
   */
  public build.buildfarm.v1test.ProvisionedQueuesConfig getProvisionedQueues() {
    return provisionedQueues_ == null ? build.buildfarm.v1test.ProvisionedQueuesConfig.getDefaultInstance() : provisionedQueues_;
  }
  /**
   * <pre>
   * the provisioned queue definitions for platform partitioning
   * </pre>
   *
   * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
   */
  public build.buildfarm.v1test.ProvisionedQueuesConfigOrBuilder getProvisionedQueuesOrBuilder() {
    return getProvisionedQueues();
  }

  public static final int TIMEOUT_FIELD_NUMBER = 32;
  private int timeout_;
  /**
   * <pre>
   * connection and socket read timeout for jedis
   * </pre>
   *
   * <code>int32 timeout = 32;</code>
   */
  public int getTimeout() {
    return timeout_;
  }

  public static final int MAX_ATTEMPTS_FIELD_NUMBER = 33;
  private int maxAttempts_;
  /**
   * <pre>
   * maximum number of retries in a cluster
   * </pre>
   *
   * <code>int32 max_attempts = 33;</code>
   */
  public int getMaxAttempts() {
    return maxAttempts_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getRedisUriBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, redisUri_);
    }
    if (!getWorkersHashNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, workersHashName_);
    }
    if (!getActionCachePrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, actionCachePrefix_);
    }
    if (actionCacheExpire_ != 0) {
      output.writeInt32(4, actionCacheExpire_);
    }
    if (!getOperationPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, operationPrefix_);
    }
    if (operationExpire_ != 0) {
      output.writeInt32(6, operationExpire_);
    }
    if (!getQueuedOperationsListNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, queuedOperationsListName_);
    }
    if (!getDispatchedOperationsHashNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, dispatchedOperationsHashName_);
    }
    if (!getOperationChannelPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, operationChannelPrefix_);
    }
    if (!getCasPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, casPrefix_);
    }
    if (casExpire_ != 0) {
      output.writeInt32(11, casExpire_);
    }
    if (jedisPoolMaxTotal_ != 0) {
      output.writeInt32(15, jedisPoolMaxTotal_);
    }
    if (maxQueueDepth_ != 0) {
      output.writeInt32(16, maxQueueDepth_);
    }
    if (maxPreQueueDepth_ != 0) {
      output.writeInt32(17, maxPreQueueDepth_);
    }
    if (!getPreQueuedOperationsListNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, preQueuedOperationsListName_);
    }
    if (!getProcessingListNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 19, processingListName_);
    }
    if (!getProcessingPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 20, processingPrefix_);
    }
    if (processingTimeoutMillis_ != 0) {
      output.writeInt32(21, processingTimeoutMillis_);
    }
    if (!getDispatchingPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 23, dispatchingPrefix_);
    }
    if (dispatchingTimeoutMillis_ != 0) {
      output.writeInt32(24, dispatchingTimeoutMillis_);
    }
    if (!getWorkerChannelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 25, workerChannel_);
    }
    if (subscribeToBackplane_ != false) {
      output.writeBool(26, subscribeToBackplane_);
    }
    if (runFailsafeOperation_ != false) {
      output.writeBool(27, runFailsafeOperation_);
    }
    if (!getActionBlacklistPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 28, actionBlacklistPrefix_);
    }
    if (actionBlacklistExpire_ != 0) {
      output.writeInt32(29, actionBlacklistExpire_);
    }
    if (!getInvocationBlacklistPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 30, invocationBlacklistPrefix_);
    }
    if (provisionedQueues_ != null) {
      output.writeMessage(31, getProvisionedQueues());
    }
    if (timeout_ != 0) {
      output.writeInt32(32, timeout_);
    }
    if (maxAttempts_ != 0) {
      output.writeInt32(33, maxAttempts_);
    }
    if (!getRedisPasswordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 34, redisPassword_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getRedisUriBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, redisUri_);
    }
    if (!getWorkersHashNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, workersHashName_);
    }
    if (!getActionCachePrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, actionCachePrefix_);
    }
    if (actionCacheExpire_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, actionCacheExpire_);
    }
    if (!getOperationPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, operationPrefix_);
    }
    if (operationExpire_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, operationExpire_);
    }
    if (!getQueuedOperationsListNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, queuedOperationsListName_);
    }
    if (!getDispatchedOperationsHashNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, dispatchedOperationsHashName_);
    }
    if (!getOperationChannelPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, operationChannelPrefix_);
    }
    if (!getCasPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, casPrefix_);
    }
    if (casExpire_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, casExpire_);
    }
    if (jedisPoolMaxTotal_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, jedisPoolMaxTotal_);
    }
    if (maxQueueDepth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, maxQueueDepth_);
    }
    if (maxPreQueueDepth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, maxPreQueueDepth_);
    }
    if (!getPreQueuedOperationsListNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, preQueuedOperationsListName_);
    }
    if (!getProcessingListNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, processingListName_);
    }
    if (!getProcessingPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, processingPrefix_);
    }
    if (processingTimeoutMillis_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(21, processingTimeoutMillis_);
    }
    if (!getDispatchingPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, dispatchingPrefix_);
    }
    if (dispatchingTimeoutMillis_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(24, dispatchingTimeoutMillis_);
    }
    if (!getWorkerChannelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, workerChannel_);
    }
    if (subscribeToBackplane_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(26, subscribeToBackplane_);
    }
    if (runFailsafeOperation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(27, runFailsafeOperation_);
    }
    if (!getActionBlacklistPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, actionBlacklistPrefix_);
    }
    if (actionBlacklistExpire_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(29, actionBlacklistExpire_);
    }
    if (!getInvocationBlacklistPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(30, invocationBlacklistPrefix_);
    }
    if (provisionedQueues_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, getProvisionedQueues());
    }
    if (timeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(32, timeout_);
    }
    if (maxAttempts_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(33, maxAttempts_);
    }
    if (!getRedisPasswordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(34, redisPassword_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof build.buildfarm.v1test.RedisShardBackplaneConfig)) {
      return super.equals(obj);
    }
    build.buildfarm.v1test.RedisShardBackplaneConfig other = (build.buildfarm.v1test.RedisShardBackplaneConfig) obj;

    if (!getRedisUri()
        .equals(other.getRedisUri())) return false;
    if (!getRedisPassword()
        .equals(other.getRedisPassword())) return false;
    if (getJedisPoolMaxTotal()
        != other.getJedisPoolMaxTotal()) return false;
    if (!getWorkersHashName()
        .equals(other.getWorkersHashName())) return false;
    if (!getWorkerChannel()
        .equals(other.getWorkerChannel())) return false;
    if (!getActionCachePrefix()
        .equals(other.getActionCachePrefix())) return false;
    if (getActionCacheExpire()
        != other.getActionCacheExpire()) return false;
    if (!getActionBlacklistPrefix()
        .equals(other.getActionBlacklistPrefix())) return false;
    if (getActionBlacklistExpire()
        != other.getActionBlacklistExpire()) return false;
    if (!getInvocationBlacklistPrefix()
        .equals(other.getInvocationBlacklistPrefix())) return false;
    if (!getOperationPrefix()
        .equals(other.getOperationPrefix())) return false;
    if (getOperationExpire()
        != other.getOperationExpire()) return false;
    if (!getPreQueuedOperationsListName()
        .equals(other.getPreQueuedOperationsListName())) return false;
    if (!getProcessingListName()
        .equals(other.getProcessingListName())) return false;
    if (!getProcessingPrefix()
        .equals(other.getProcessingPrefix())) return false;
    if (getProcessingTimeoutMillis()
        != other.getProcessingTimeoutMillis()) return false;
    if (!getQueuedOperationsListName()
        .equals(other.getQueuedOperationsListName())) return false;
    if (!getDispatchingPrefix()
        .equals(other.getDispatchingPrefix())) return false;
    if (getDispatchingTimeoutMillis()
        != other.getDispatchingTimeoutMillis()) return false;
    if (!getDispatchedOperationsHashName()
        .equals(other.getDispatchedOperationsHashName())) return false;
    if (!getOperationChannelPrefix()
        .equals(other.getOperationChannelPrefix())) return false;
    if (!getCasPrefix()
        .equals(other.getCasPrefix())) return false;
    if (getCasExpire()
        != other.getCasExpire()) return false;
    if (getSubscribeToBackplane()
        != other.getSubscribeToBackplane()) return false;
    if (getRunFailsafeOperation()
        != other.getRunFailsafeOperation()) return false;
    if (getMaxQueueDepth()
        != other.getMaxQueueDepth()) return false;
    if (getMaxPreQueueDepth()
        != other.getMaxPreQueueDepth()) return false;
    if (hasProvisionedQueues() != other.hasProvisionedQueues()) return false;
    if (hasProvisionedQueues()) {
      if (!getProvisionedQueues()
          .equals(other.getProvisionedQueues())) return false;
    }
    if (getTimeout()
        != other.getTimeout()) return false;
    if (getMaxAttempts()
        != other.getMaxAttempts()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REDIS_URI_FIELD_NUMBER;
    hash = (53 * hash) + getRedisUri().hashCode();
    hash = (37 * hash) + REDIS_PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getRedisPassword().hashCode();
    hash = (37 * hash) + JEDIS_POOL_MAX_TOTAL_FIELD_NUMBER;
    hash = (53 * hash) + getJedisPoolMaxTotal();
    hash = (37 * hash) + WORKERS_HASH_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getWorkersHashName().hashCode();
    hash = (37 * hash) + WORKER_CHANNEL_FIELD_NUMBER;
    hash = (53 * hash) + getWorkerChannel().hashCode();
    hash = (37 * hash) + ACTION_CACHE_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getActionCachePrefix().hashCode();
    hash = (37 * hash) + ACTION_CACHE_EXPIRE_FIELD_NUMBER;
    hash = (53 * hash) + getActionCacheExpire();
    hash = (37 * hash) + ACTION_BLACKLIST_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getActionBlacklistPrefix().hashCode();
    hash = (37 * hash) + ACTION_BLACKLIST_EXPIRE_FIELD_NUMBER;
    hash = (53 * hash) + getActionBlacklistExpire();
    hash = (37 * hash) + INVOCATION_BLACKLIST_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getInvocationBlacklistPrefix().hashCode();
    hash = (37 * hash) + OPERATION_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getOperationPrefix().hashCode();
    hash = (37 * hash) + OPERATION_EXPIRE_FIELD_NUMBER;
    hash = (53 * hash) + getOperationExpire();
    hash = (37 * hash) + PRE_QUEUED_OPERATIONS_LIST_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPreQueuedOperationsListName().hashCode();
    hash = (37 * hash) + PROCESSING_LIST_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getProcessingListName().hashCode();
    hash = (37 * hash) + PROCESSING_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getProcessingPrefix().hashCode();
    hash = (37 * hash) + PROCESSING_TIMEOUT_MILLIS_FIELD_NUMBER;
    hash = (53 * hash) + getProcessingTimeoutMillis();
    hash = (37 * hash) + QUEUED_OPERATIONS_LIST_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getQueuedOperationsListName().hashCode();
    hash = (37 * hash) + DISPATCHING_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getDispatchingPrefix().hashCode();
    hash = (37 * hash) + DISPATCHING_TIMEOUT_MILLIS_FIELD_NUMBER;
    hash = (53 * hash) + getDispatchingTimeoutMillis();
    hash = (37 * hash) + DISPATCHED_OPERATIONS_HASH_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDispatchedOperationsHashName().hashCode();
    hash = (37 * hash) + OPERATION_CHANNEL_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getOperationChannelPrefix().hashCode();
    hash = (37 * hash) + CAS_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getCasPrefix().hashCode();
    hash = (37 * hash) + CAS_EXPIRE_FIELD_NUMBER;
    hash = (53 * hash) + getCasExpire();
    hash = (37 * hash) + SUBSCRIBE_TO_BACKPLANE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSubscribeToBackplane());
    hash = (37 * hash) + RUN_FAILSAFE_OPERATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRunFailsafeOperation());
    hash = (37 * hash) + MAX_QUEUE_DEPTH_FIELD_NUMBER;
    hash = (53 * hash) + getMaxQueueDepth();
    hash = (37 * hash) + MAX_PRE_QUEUE_DEPTH_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPreQueueDepth();
    if (hasProvisionedQueues()) {
      hash = (37 * hash) + PROVISIONED_QUEUES_FIELD_NUMBER;
      hash = (53 * hash) + getProvisionedQueues().hashCode();
    }
    hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTimeout();
    hash = (37 * hash) + MAX_ATTEMPTS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxAttempts();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static build.buildfarm.v1test.RedisShardBackplaneConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(build.buildfarm.v1test.RedisShardBackplaneConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code build.buildfarm.v1test.RedisShardBackplaneConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:build.buildfarm.v1test.RedisShardBackplaneConfig)
      build.buildfarm.v1test.RedisShardBackplaneConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return build.buildfarm.v1test.OperationQueueProto.internal_static_build_buildfarm_v1test_RedisShardBackplaneConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return build.buildfarm.v1test.OperationQueueProto.internal_static_build_buildfarm_v1test_RedisShardBackplaneConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              build.buildfarm.v1test.RedisShardBackplaneConfig.class, build.buildfarm.v1test.RedisShardBackplaneConfig.Builder.class);
    }

    // Construct using build.buildfarm.v1test.RedisShardBackplaneConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      redisUri_ = "";

      redisPassword_ = "";

      jedisPoolMaxTotal_ = 0;

      workersHashName_ = "";

      workerChannel_ = "";

      actionCachePrefix_ = "";

      actionCacheExpire_ = 0;

      actionBlacklistPrefix_ = "";

      actionBlacklistExpire_ = 0;

      invocationBlacklistPrefix_ = "";

      operationPrefix_ = "";

      operationExpire_ = 0;

      preQueuedOperationsListName_ = "";

      processingListName_ = "";

      processingPrefix_ = "";

      processingTimeoutMillis_ = 0;

      queuedOperationsListName_ = "";

      dispatchingPrefix_ = "";

      dispatchingTimeoutMillis_ = 0;

      dispatchedOperationsHashName_ = "";

      operationChannelPrefix_ = "";

      casPrefix_ = "";

      casExpire_ = 0;

      subscribeToBackplane_ = false;

      runFailsafeOperation_ = false;

      maxQueueDepth_ = 0;

      maxPreQueueDepth_ = 0;

      if (provisionedQueuesBuilder_ == null) {
        provisionedQueues_ = null;
      } else {
        provisionedQueues_ = null;
        provisionedQueuesBuilder_ = null;
      }
      timeout_ = 0;

      maxAttempts_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return build.buildfarm.v1test.OperationQueueProto.internal_static_build_buildfarm_v1test_RedisShardBackplaneConfig_descriptor;
    }

    @java.lang.Override
    public build.buildfarm.v1test.RedisShardBackplaneConfig getDefaultInstanceForType() {
      return build.buildfarm.v1test.RedisShardBackplaneConfig.getDefaultInstance();
    }

    @java.lang.Override
    public build.buildfarm.v1test.RedisShardBackplaneConfig build() {
      build.buildfarm.v1test.RedisShardBackplaneConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public build.buildfarm.v1test.RedisShardBackplaneConfig buildPartial() {
      build.buildfarm.v1test.RedisShardBackplaneConfig result = new build.buildfarm.v1test.RedisShardBackplaneConfig(this);
      result.redisUri_ = redisUri_;
      result.redisPassword_ = redisPassword_;
      result.jedisPoolMaxTotal_ = jedisPoolMaxTotal_;
      result.workersHashName_ = workersHashName_;
      result.workerChannel_ = workerChannel_;
      result.actionCachePrefix_ = actionCachePrefix_;
      result.actionCacheExpire_ = actionCacheExpire_;
      result.actionBlacklistPrefix_ = actionBlacklistPrefix_;
      result.actionBlacklistExpire_ = actionBlacklistExpire_;
      result.invocationBlacklistPrefix_ = invocationBlacklistPrefix_;
      result.operationPrefix_ = operationPrefix_;
      result.operationExpire_ = operationExpire_;
      result.preQueuedOperationsListName_ = preQueuedOperationsListName_;
      result.processingListName_ = processingListName_;
      result.processingPrefix_ = processingPrefix_;
      result.processingTimeoutMillis_ = processingTimeoutMillis_;
      result.queuedOperationsListName_ = queuedOperationsListName_;
      result.dispatchingPrefix_ = dispatchingPrefix_;
      result.dispatchingTimeoutMillis_ = dispatchingTimeoutMillis_;
      result.dispatchedOperationsHashName_ = dispatchedOperationsHashName_;
      result.operationChannelPrefix_ = operationChannelPrefix_;
      result.casPrefix_ = casPrefix_;
      result.casExpire_ = casExpire_;
      result.subscribeToBackplane_ = subscribeToBackplane_;
      result.runFailsafeOperation_ = runFailsafeOperation_;
      result.maxQueueDepth_ = maxQueueDepth_;
      result.maxPreQueueDepth_ = maxPreQueueDepth_;
      if (provisionedQueuesBuilder_ == null) {
        result.provisionedQueues_ = provisionedQueues_;
      } else {
        result.provisionedQueues_ = provisionedQueuesBuilder_.build();
      }
      result.timeout_ = timeout_;
      result.maxAttempts_ = maxAttempts_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof build.buildfarm.v1test.RedisShardBackplaneConfig) {
        return mergeFrom((build.buildfarm.v1test.RedisShardBackplaneConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(build.buildfarm.v1test.RedisShardBackplaneConfig other) {
      if (other == build.buildfarm.v1test.RedisShardBackplaneConfig.getDefaultInstance()) return this;
      if (!other.getRedisUri().isEmpty()) {
        redisUri_ = other.redisUri_;
        onChanged();
      }
      if (!other.getRedisPassword().isEmpty()) {
        redisPassword_ = other.redisPassword_;
        onChanged();
      }
      if (other.getJedisPoolMaxTotal() != 0) {
        setJedisPoolMaxTotal(other.getJedisPoolMaxTotal());
      }
      if (!other.getWorkersHashName().isEmpty()) {
        workersHashName_ = other.workersHashName_;
        onChanged();
      }
      if (!other.getWorkerChannel().isEmpty()) {
        workerChannel_ = other.workerChannel_;
        onChanged();
      }
      if (!other.getActionCachePrefix().isEmpty()) {
        actionCachePrefix_ = other.actionCachePrefix_;
        onChanged();
      }
      if (other.getActionCacheExpire() != 0) {
        setActionCacheExpire(other.getActionCacheExpire());
      }
      if (!other.getActionBlacklistPrefix().isEmpty()) {
        actionBlacklistPrefix_ = other.actionBlacklistPrefix_;
        onChanged();
      }
      if (other.getActionBlacklistExpire() != 0) {
        setActionBlacklistExpire(other.getActionBlacklistExpire());
      }
      if (!other.getInvocationBlacklistPrefix().isEmpty()) {
        invocationBlacklistPrefix_ = other.invocationBlacklistPrefix_;
        onChanged();
      }
      if (!other.getOperationPrefix().isEmpty()) {
        operationPrefix_ = other.operationPrefix_;
        onChanged();
      }
      if (other.getOperationExpire() != 0) {
        setOperationExpire(other.getOperationExpire());
      }
      if (!other.getPreQueuedOperationsListName().isEmpty()) {
        preQueuedOperationsListName_ = other.preQueuedOperationsListName_;
        onChanged();
      }
      if (!other.getProcessingListName().isEmpty()) {
        processingListName_ = other.processingListName_;
        onChanged();
      }
      if (!other.getProcessingPrefix().isEmpty()) {
        processingPrefix_ = other.processingPrefix_;
        onChanged();
      }
      if (other.getProcessingTimeoutMillis() != 0) {
        setProcessingTimeoutMillis(other.getProcessingTimeoutMillis());
      }
      if (!other.getQueuedOperationsListName().isEmpty()) {
        queuedOperationsListName_ = other.queuedOperationsListName_;
        onChanged();
      }
      if (!other.getDispatchingPrefix().isEmpty()) {
        dispatchingPrefix_ = other.dispatchingPrefix_;
        onChanged();
      }
      if (other.getDispatchingTimeoutMillis() != 0) {
        setDispatchingTimeoutMillis(other.getDispatchingTimeoutMillis());
      }
      if (!other.getDispatchedOperationsHashName().isEmpty()) {
        dispatchedOperationsHashName_ = other.dispatchedOperationsHashName_;
        onChanged();
      }
      if (!other.getOperationChannelPrefix().isEmpty()) {
        operationChannelPrefix_ = other.operationChannelPrefix_;
        onChanged();
      }
      if (!other.getCasPrefix().isEmpty()) {
        casPrefix_ = other.casPrefix_;
        onChanged();
      }
      if (other.getCasExpire() != 0) {
        setCasExpire(other.getCasExpire());
      }
      if (other.getSubscribeToBackplane() != false) {
        setSubscribeToBackplane(other.getSubscribeToBackplane());
      }
      if (other.getRunFailsafeOperation() != false) {
        setRunFailsafeOperation(other.getRunFailsafeOperation());
      }
      if (other.getMaxQueueDepth() != 0) {
        setMaxQueueDepth(other.getMaxQueueDepth());
      }
      if (other.getMaxPreQueueDepth() != 0) {
        setMaxPreQueueDepth(other.getMaxPreQueueDepth());
      }
      if (other.hasProvisionedQueues()) {
        mergeProvisionedQueues(other.getProvisionedQueues());
      }
      if (other.getTimeout() != 0) {
        setTimeout(other.getTimeout());
      }
      if (other.getMaxAttempts() != 0) {
        setMaxAttempts(other.getMaxAttempts());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      build.buildfarm.v1test.RedisShardBackplaneConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (build.buildfarm.v1test.RedisShardBackplaneConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object redisUri_ = "";
    /**
     * <pre>
     * the uri endpoint of the redis target. This must be a single host entry
     * with cluster discoverability enabled if the redis service is configured
     * for cluster operation. If the endpoint is a singleton redis node, cluster
     * adaptive behaviors, specifically queue balancing, will be emulated.
     * </pre>
     *
     * <code>string redis_uri = 1;</code>
     */
    public java.lang.String getRedisUri() {
      java.lang.Object ref = redisUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        redisUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the uri endpoint of the redis target. This must be a single host entry
     * with cluster discoverability enabled if the redis service is configured
     * for cluster operation. If the endpoint is a singleton redis node, cluster
     * adaptive behaviors, specifically queue balancing, will be emulated.
     * </pre>
     *
     * <code>string redis_uri = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRedisUriBytes() {
      java.lang.Object ref = redisUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        redisUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the uri endpoint of the redis target. This must be a single host entry
     * with cluster discoverability enabled if the redis service is configured
     * for cluster operation. If the endpoint is a singleton redis node, cluster
     * adaptive behaviors, specifically queue balancing, will be emulated.
     * </pre>
     *
     * <code>string redis_uri = 1;</code>
     */
    public Builder setRedisUri(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      redisUri_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the uri endpoint of the redis target. This must be a single host entry
     * with cluster discoverability enabled if the redis service is configured
     * for cluster operation. If the endpoint is a singleton redis node, cluster
     * adaptive behaviors, specifically queue balancing, will be emulated.
     * </pre>
     *
     * <code>string redis_uri = 1;</code>
     */
    public Builder clearRedisUri() {
      
      redisUri_ = getDefaultInstance().getRedisUri();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the uri endpoint of the redis target. This must be a single host entry
     * with cluster discoverability enabled if the redis service is configured
     * for cluster operation. If the endpoint is a singleton redis node, cluster
     * adaptive behaviors, specifically queue balancing, will be emulated.
     * </pre>
     *
     * <code>string redis_uri = 1;</code>
     */
    public Builder setRedisUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      redisUri_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object redisPassword_ = "";
    /**
     * <pre>
     * the password used to authenticate to redis via `auth`
     * </pre>
     *
     * <code>string redis_password = 34;</code>
     */
    public java.lang.String getRedisPassword() {
      java.lang.Object ref = redisPassword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        redisPassword_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the password used to authenticate to redis via `auth`
     * </pre>
     *
     * <code>string redis_password = 34;</code>
     */
    public com.google.protobuf.ByteString
        getRedisPasswordBytes() {
      java.lang.Object ref = redisPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        redisPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the password used to authenticate to redis via `auth`
     * </pre>
     *
     * <code>string redis_password = 34;</code>
     */
    public Builder setRedisPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      redisPassword_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the password used to authenticate to redis via `auth`
     * </pre>
     *
     * <code>string redis_password = 34;</code>
     */
    public Builder clearRedisPassword() {
      
      redisPassword_ = getDefaultInstance().getRedisPassword();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the password used to authenticate to redis via `auth`
     * </pre>
     *
     * <code>string redis_password = 34;</code>
     */
    public Builder setRedisPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      redisPassword_ = value;
      onChanged();
      return this;
    }

    private int jedisPoolMaxTotal_ ;
    /**
     * <pre>
     * the size of the pool of jedis connections per-cluster-member
     * </pre>
     *
     * <code>int32 jedis_pool_max_total = 15;</code>
     */
    public int getJedisPoolMaxTotal() {
      return jedisPoolMaxTotal_;
    }
    /**
     * <pre>
     * the size of the pool of jedis connections per-cluster-member
     * </pre>
     *
     * <code>int32 jedis_pool_max_total = 15;</code>
     */
    public Builder setJedisPoolMaxTotal(int value) {
      
      jedisPoolMaxTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the size of the pool of jedis connections per-cluster-member
     * </pre>
     *
     * <code>int32 jedis_pool_max_total = 15;</code>
     */
    public Builder clearJedisPoolMaxTotal() {
      
      jedisPoolMaxTotal_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object workersHashName_ = "";
    /**
     * <pre>
     * the hash of active cas shards. Shards must update a self-reported expiry
     * regularly or face deactivation and excommunication. Advertisements for
     * contents on deactivated workers may be pruned.
     * </pre>
     *
     * <code>string workers_hash_name = 2;</code>
     */
    public java.lang.String getWorkersHashName() {
      java.lang.Object ref = workersHashName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workersHashName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the hash of active cas shards. Shards must update a self-reported expiry
     * regularly or face deactivation and excommunication. Advertisements for
     * contents on deactivated workers may be pruned.
     * </pre>
     *
     * <code>string workers_hash_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getWorkersHashNameBytes() {
      java.lang.Object ref = workersHashName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workersHashName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the hash of active cas shards. Shards must update a self-reported expiry
     * regularly or face deactivation and excommunication. Advertisements for
     * contents on deactivated workers may be pruned.
     * </pre>
     *
     * <code>string workers_hash_name = 2;</code>
     */
    public Builder setWorkersHashName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      workersHashName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the hash of active cas shards. Shards must update a self-reported expiry
     * regularly or face deactivation and excommunication. Advertisements for
     * contents on deactivated workers may be pruned.
     * </pre>
     *
     * <code>string workers_hash_name = 2;</code>
     */
    public Builder clearWorkersHashName() {
      
      workersHashName_ = getDefaultInstance().getWorkersHashName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the hash of active cas shards. Shards must update a self-reported expiry
     * regularly or face deactivation and excommunication. Advertisements for
     * contents on deactivated workers may be pruned.
     * </pre>
     *
     * <code>string workers_hash_name = 2;</code>
     */
    public Builder setWorkersHashNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      workersHashName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object workerChannel_ = "";
    /**
     * <pre>
     * the channel used to communicate cas shard structural changes
     * </pre>
     *
     * <code>string worker_channel = 25;</code>
     */
    public java.lang.String getWorkerChannel() {
      java.lang.Object ref = workerChannel_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workerChannel_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the channel used to communicate cas shard structural changes
     * </pre>
     *
     * <code>string worker_channel = 25;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerChannelBytes() {
      java.lang.Object ref = workerChannel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerChannel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the channel used to communicate cas shard structural changes
     * </pre>
     *
     * <code>string worker_channel = 25;</code>
     */
    public Builder setWorkerChannel(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      workerChannel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the channel used to communicate cas shard structural changes
     * </pre>
     *
     * <code>string worker_channel = 25;</code>
     */
    public Builder clearWorkerChannel() {
      
      workerChannel_ = getDefaultInstance().getWorkerChannel();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the channel used to communicate cas shard structural changes
     * </pre>
     *
     * <code>string worker_channel = 25;</code>
     */
    public Builder setWorkerChannelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      workerChannel_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object actionCachePrefix_ = "";
    /**
     * <pre>
     * the prefix of keys which map action keys to action results
     * </pre>
     *
     * <code>string action_cache_prefix = 3;</code>
     */
    public java.lang.String getActionCachePrefix() {
      java.lang.Object ref = actionCachePrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        actionCachePrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which map action keys to action results
     * </pre>
     *
     * <code>string action_cache_prefix = 3;</code>
     */
    public com.google.protobuf.ByteString
        getActionCachePrefixBytes() {
      java.lang.Object ref = actionCachePrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        actionCachePrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which map action keys to action results
     * </pre>
     *
     * <code>string action_cache_prefix = 3;</code>
     */
    public Builder setActionCachePrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      actionCachePrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which map action keys to action results
     * </pre>
     *
     * <code>string action_cache_prefix = 3;</code>
     */
    public Builder clearActionCachePrefix() {
      
      actionCachePrefix_ = getDefaultInstance().getActionCachePrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which map action keys to action results
     * </pre>
     *
     * <code>string action_cache_prefix = 3;</code>
     */
    public Builder setActionCachePrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      actionCachePrefix_ = value;
      onChanged();
      return this;
    }

    private int actionCacheExpire_ ;
    /**
     * <pre>
     * the expiration time in seconds for action cache entries
     * </pre>
     *
     * <code>int32 action_cache_expire = 4;</code>
     */
    public int getActionCacheExpire() {
      return actionCacheExpire_;
    }
    /**
     * <pre>
     * the expiration time in seconds for action cache entries
     * </pre>
     *
     * <code>int32 action_cache_expire = 4;</code>
     */
    public Builder setActionCacheExpire(int value) {
      
      actionCacheExpire_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the expiration time in seconds for action cache entries
     * </pre>
     *
     * <code>int32 action_cache_expire = 4;</code>
     */
    public Builder clearActionCacheExpire() {
      
      actionCacheExpire_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object actionBlacklistPrefix_ = "";
    /**
     * <pre>
     * the prefix of keys which identify actions that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string action_blacklist_prefix = 28;</code>
     */
    public java.lang.String getActionBlacklistPrefix() {
      java.lang.Object ref = actionBlacklistPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        actionBlacklistPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which identify actions that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string action_blacklist_prefix = 28;</code>
     */
    public com.google.protobuf.ByteString
        getActionBlacklistPrefixBytes() {
      java.lang.Object ref = actionBlacklistPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        actionBlacklistPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which identify actions that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string action_blacklist_prefix = 28;</code>
     */
    public Builder setActionBlacklistPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      actionBlacklistPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which identify actions that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string action_blacklist_prefix = 28;</code>
     */
    public Builder clearActionBlacklistPrefix() {
      
      actionBlacklistPrefix_ = getDefaultInstance().getActionBlacklistPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which identify actions that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string action_blacklist_prefix = 28;</code>
     */
    public Builder setActionBlacklistPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      actionBlacklistPrefix_ = value;
      onChanged();
      return this;
    }

    private int actionBlacklistExpire_ ;
    /**
     * <pre>
     * the expiration time in seconds for banned actions
     * </pre>
     *
     * <code>int32 action_blacklist_expire = 29;</code>
     */
    public int getActionBlacklistExpire() {
      return actionBlacklistExpire_;
    }
    /**
     * <pre>
     * the expiration time in seconds for banned actions
     * </pre>
     *
     * <code>int32 action_blacklist_expire = 29;</code>
     */
    public Builder setActionBlacklistExpire(int value) {
      
      actionBlacklistExpire_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the expiration time in seconds for banned actions
     * </pre>
     *
     * <code>int32 action_blacklist_expire = 29;</code>
     */
    public Builder clearActionBlacklistExpire() {
      
      actionBlacklistExpire_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object invocationBlacklistPrefix_ = "";
    /**
     * <pre>
     * the prefix of keys which identify invocations that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string invocation_blacklist_prefix = 30;</code>
     */
    public java.lang.String getInvocationBlacklistPrefix() {
      java.lang.Object ref = invocationBlacklistPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        invocationBlacklistPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which identify invocations that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string invocation_blacklist_prefix = 30;</code>
     */
    public com.google.protobuf.ByteString
        getInvocationBlacklistPrefixBytes() {
      java.lang.Object ref = invocationBlacklistPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        invocationBlacklistPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys which identify invocations that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string invocation_blacklist_prefix = 30;</code>
     */
    public Builder setInvocationBlacklistPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      invocationBlacklistPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which identify invocations that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string invocation_blacklist_prefix = 30;</code>
     */
    public Builder clearInvocationBlacklistPrefix() {
      
      invocationBlacklistPrefix_ = getDefaultInstance().getInvocationBlacklistPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys which identify invocations that are to be rejected
     * from any request endpoint
     * </pre>
     *
     * <code>string invocation_blacklist_prefix = 30;</code>
     */
    public Builder setInvocationBlacklistPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      invocationBlacklistPrefix_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object operationPrefix_ = "";
    /**
     * <pre>
     * the prefix of keys used to retain current Operation state
     * </pre>
     *
     * <code>string operation_prefix = 5;</code>
     */
    public java.lang.String getOperationPrefix() {
      java.lang.Object ref = operationPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys used to retain current Operation state
     * </pre>
     *
     * <code>string operation_prefix = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOperationPrefixBytes() {
      java.lang.Object ref = operationPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of keys used to retain current Operation state
     * </pre>
     *
     * <code>string operation_prefix = 5;</code>
     */
    public Builder setOperationPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      operationPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys used to retain current Operation state
     * </pre>
     *
     * <code>string operation_prefix = 5;</code>
     */
    public Builder clearOperationPrefix() {
      
      operationPrefix_ = getDefaultInstance().getOperationPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of keys used to retain current Operation state
     * </pre>
     *
     * <code>string operation_prefix = 5;</code>
     */
    public Builder setOperationPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      operationPrefix_ = value;
      onChanged();
      return this;
    }

    private int operationExpire_ ;
    /**
     * <pre>
     * the expiration time in seconds for operation keys
     * </pre>
     *
     * <code>int32 operation_expire = 6;</code>
     */
    public int getOperationExpire() {
      return operationExpire_;
    }
    /**
     * <pre>
     * the expiration time in seconds for operation keys
     * </pre>
     *
     * <code>int32 operation_expire = 6;</code>
     */
    public Builder setOperationExpire(int value) {
      
      operationExpire_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the expiration time in seconds for operation keys
     * </pre>
     *
     * <code>int32 operation_expire = 6;</code>
     */
    public Builder clearOperationExpire() {
      
      operationExpire_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object preQueuedOperationsListName_ = "";
    /**
     * <pre>
     * the arrival queue. Contains ExecuteEntry messages
     * </pre>
     *
     * <code>string pre_queued_operations_list_name = 18;</code>
     */
    public java.lang.String getPreQueuedOperationsListName() {
      java.lang.Object ref = preQueuedOperationsListName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        preQueuedOperationsListName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the arrival queue. Contains ExecuteEntry messages
     * </pre>
     *
     * <code>string pre_queued_operations_list_name = 18;</code>
     */
    public com.google.protobuf.ByteString
        getPreQueuedOperationsListNameBytes() {
      java.lang.Object ref = preQueuedOperationsListName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        preQueuedOperationsListName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the arrival queue. Contains ExecuteEntry messages
     * </pre>
     *
     * <code>string pre_queued_operations_list_name = 18;</code>
     */
    public Builder setPreQueuedOperationsListName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      preQueuedOperationsListName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the arrival queue. Contains ExecuteEntry messages
     * </pre>
     *
     * <code>string pre_queued_operations_list_name = 18;</code>
     */
    public Builder clearPreQueuedOperationsListName() {
      
      preQueuedOperationsListName_ = getDefaultInstance().getPreQueuedOperationsListName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the arrival queue. Contains ExecuteEntry messages
     * </pre>
     *
     * <code>string pre_queued_operations_list_name = 18;</code>
     */
    public Builder setPreQueuedOperationsListNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      preQueuedOperationsListName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object processingListName_ = "";
    /**
     * <pre>
     * the atomic target list for reliable arrival queue removal
     * </pre>
     *
     * <code>string processing_list_name = 19;</code>
     */
    public java.lang.String getProcessingListName() {
      java.lang.Object ref = processingListName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processingListName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the atomic target list for reliable arrival queue removal
     * </pre>
     *
     * <code>string processing_list_name = 19;</code>
     */
    public com.google.protobuf.ByteString
        getProcessingListNameBytes() {
      java.lang.Object ref = processingListName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processingListName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the atomic target list for reliable arrival queue removal
     * </pre>
     *
     * <code>string processing_list_name = 19;</code>
     */
    public Builder setProcessingListName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      processingListName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the atomic target list for reliable arrival queue removal
     * </pre>
     *
     * <code>string processing_list_name = 19;</code>
     */
    public Builder clearProcessingListName() {
      
      processingListName_ = getDefaultInstance().getProcessingListName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the atomic target list for reliable arrival queue removal
     * </pre>
     *
     * <code>string processing_list_name = 19;</code>
     */
    public Builder setProcessingListNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      processingListName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object processingPrefix_ = "";
    /**
     * <pre>
     * the prefix of the processing list timeout monitor key
     * </pre>
     *
     * <code>string processing_prefix = 20;</code>
     */
    public java.lang.String getProcessingPrefix() {
      java.lang.Object ref = processingPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processingPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of the processing list timeout monitor key
     * </pre>
     *
     * <code>string processing_prefix = 20;</code>
     */
    public com.google.protobuf.ByteString
        getProcessingPrefixBytes() {
      java.lang.Object ref = processingPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processingPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of the processing list timeout monitor key
     * </pre>
     *
     * <code>string processing_prefix = 20;</code>
     */
    public Builder setProcessingPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      processingPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of the processing list timeout monitor key
     * </pre>
     *
     * <code>string processing_prefix = 20;</code>
     */
    public Builder clearProcessingPrefix() {
      
      processingPrefix_ = getDefaultInstance().getProcessingPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of the processing list timeout monitor key
     * </pre>
     *
     * <code>string processing_prefix = 20;</code>
     */
    public Builder setProcessingPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      processingPrefix_ = value;
      onChanged();
      return this;
    }

    private int processingTimeoutMillis_ ;
    /**
     * <pre>
     * the minimum timeout for an operation to be removed from the processing list
     * upon leaving the arrival queue
     * </pre>
     *
     * <code>int32 processing_timeout_millis = 21;</code>
     */
    public int getProcessingTimeoutMillis() {
      return processingTimeoutMillis_;
    }
    /**
     * <pre>
     * the minimum timeout for an operation to be removed from the processing list
     * upon leaving the arrival queue
     * </pre>
     *
     * <code>int32 processing_timeout_millis = 21;</code>
     */
    public Builder setProcessingTimeoutMillis(int value) {
      
      processingTimeoutMillis_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the minimum timeout for an operation to be removed from the processing list
     * upon leaving the arrival queue
     * </pre>
     *
     * <code>int32 processing_timeout_millis = 21;</code>
     */
    public Builder clearProcessingTimeoutMillis() {
      
      processingTimeoutMillis_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object queuedOperationsListName_ = "";
    /**
     * <pre>
     * the ready-to-run operation queue. Contains QueueEntry messages
     * </pre>
     *
     * <code>string queued_operations_list_name = 7;</code>
     */
    public java.lang.String getQueuedOperationsListName() {
      java.lang.Object ref = queuedOperationsListName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queuedOperationsListName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the ready-to-run operation queue. Contains QueueEntry messages
     * </pre>
     *
     * <code>string queued_operations_list_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getQueuedOperationsListNameBytes() {
      java.lang.Object ref = queuedOperationsListName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queuedOperationsListName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the ready-to-run operation queue. Contains QueueEntry messages
     * </pre>
     *
     * <code>string queued_operations_list_name = 7;</code>
     */
    public Builder setQueuedOperationsListName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      queuedOperationsListName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the ready-to-run operation queue. Contains QueueEntry messages
     * </pre>
     *
     * <code>string queued_operations_list_name = 7;</code>
     */
    public Builder clearQueuedOperationsListName() {
      
      queuedOperationsListName_ = getDefaultInstance().getQueuedOperationsListName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the ready-to-run operation queue. Contains QueueEntry messages
     * </pre>
     *
     * <code>string queued_operations_list_name = 7;</code>
     */
    public Builder setQueuedOperationsListNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      queuedOperationsListName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object dispatchingPrefix_ = "";
    /**
     * <pre>
     * the prefix of the dispatching list timeout monitor key
     * </pre>
     *
     * <code>string dispatching_prefix = 23;</code>
     */
    public java.lang.String getDispatchingPrefix() {
      java.lang.Object ref = dispatchingPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dispatchingPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of the dispatching list timeout monitor key
     * </pre>
     *
     * <code>string dispatching_prefix = 23;</code>
     */
    public com.google.protobuf.ByteString
        getDispatchingPrefixBytes() {
      java.lang.Object ref = dispatchingPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dispatchingPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of the dispatching list timeout monitor key
     * </pre>
     *
     * <code>string dispatching_prefix = 23;</code>
     */
    public Builder setDispatchingPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dispatchingPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of the dispatching list timeout monitor key
     * </pre>
     *
     * <code>string dispatching_prefix = 23;</code>
     */
    public Builder clearDispatchingPrefix() {
      
      dispatchingPrefix_ = getDefaultInstance().getDispatchingPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of the dispatching list timeout monitor key
     * </pre>
     *
     * <code>string dispatching_prefix = 23;</code>
     */
    public Builder setDispatchingPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dispatchingPrefix_ = value;
      onChanged();
      return this;
    }

    private int dispatchingTimeoutMillis_ ;
    /**
     * <pre>
     * the minimum timeout for an operation to be observable in the dispatched
     * hash upon leaving the ready-to-run queue.
     * </pre>
     *
     * <code>int32 dispatching_timeout_millis = 24;</code>
     */
    public int getDispatchingTimeoutMillis() {
      return dispatchingTimeoutMillis_;
    }
    /**
     * <pre>
     * the minimum timeout for an operation to be observable in the dispatched
     * hash upon leaving the ready-to-run queue.
     * </pre>
     *
     * <code>int32 dispatching_timeout_millis = 24;</code>
     */
    public Builder setDispatchingTimeoutMillis(int value) {
      
      dispatchingTimeoutMillis_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the minimum timeout for an operation to be observable in the dispatched
     * hash upon leaving the ready-to-run queue.
     * </pre>
     *
     * <code>int32 dispatching_timeout_millis = 24;</code>
     */
    public Builder clearDispatchingTimeoutMillis() {
      
      dispatchingTimeoutMillis_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object dispatchedOperationsHashName_ = "";
    /**
     * <pre>
     * the hash key of dispatched operations. all operations which have been
     * removed from the ready-to-run queue should make their way here in a timely
     * (per dispatching) fashion.
     * </pre>
     *
     * <code>string dispatched_operations_hash_name = 8;</code>
     */
    public java.lang.String getDispatchedOperationsHashName() {
      java.lang.Object ref = dispatchedOperationsHashName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dispatchedOperationsHashName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the hash key of dispatched operations. all operations which have been
     * removed from the ready-to-run queue should make their way here in a timely
     * (per dispatching) fashion.
     * </pre>
     *
     * <code>string dispatched_operations_hash_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDispatchedOperationsHashNameBytes() {
      java.lang.Object ref = dispatchedOperationsHashName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dispatchedOperationsHashName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the hash key of dispatched operations. all operations which have been
     * removed from the ready-to-run queue should make their way here in a timely
     * (per dispatching) fashion.
     * </pre>
     *
     * <code>string dispatched_operations_hash_name = 8;</code>
     */
    public Builder setDispatchedOperationsHashName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dispatchedOperationsHashName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the hash key of dispatched operations. all operations which have been
     * removed from the ready-to-run queue should make their way here in a timely
     * (per dispatching) fashion.
     * </pre>
     *
     * <code>string dispatched_operations_hash_name = 8;</code>
     */
    public Builder clearDispatchedOperationsHashName() {
      
      dispatchedOperationsHashName_ = getDefaultInstance().getDispatchedOperationsHashName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the hash key of dispatched operations. all operations which have been
     * removed from the ready-to-run queue should make their way here in a timely
     * (per dispatching) fashion.
     * </pre>
     *
     * <code>string dispatched_operations_hash_name = 8;</code>
     */
    public Builder setDispatchedOperationsHashNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dispatchedOperationsHashName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object operationChannelPrefix_ = "";
    /**
     * <pre>
     * the prefix of operation update topics
     * </pre>
     *
     * <code>string operation_channel_prefix = 9;</code>
     */
    public java.lang.String getOperationChannelPrefix() {
      java.lang.Object ref = operationChannelPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationChannelPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of operation update topics
     * </pre>
     *
     * <code>string operation_channel_prefix = 9;</code>
     */
    public com.google.protobuf.ByteString
        getOperationChannelPrefixBytes() {
      java.lang.Object ref = operationChannelPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationChannelPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of operation update topics
     * </pre>
     *
     * <code>string operation_channel_prefix = 9;</code>
     */
    public Builder setOperationChannelPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      operationChannelPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of operation update topics
     * </pre>
     *
     * <code>string operation_channel_prefix = 9;</code>
     */
    public Builder clearOperationChannelPrefix() {
      
      operationChannelPrefix_ = getDefaultInstance().getOperationChannelPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of operation update topics
     * </pre>
     *
     * <code>string operation_channel_prefix = 9;</code>
     */
    public Builder setOperationChannelPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      operationChannelPrefix_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object casPrefix_ = "";
    /**
     * <pre>
     * the prefix of cas set keys. A cas set for a key suffixed with a digest
     * address, contain the shards which have advertised storage of the
     * addressed content. This set of valid shards for a digest must intersect
     * with the active shard list (workers)
     * </pre>
     *
     * <code>string cas_prefix = 10;</code>
     */
    public java.lang.String getCasPrefix() {
      java.lang.Object ref = casPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        casPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the prefix of cas set keys. A cas set for a key suffixed with a digest
     * address, contain the shards which have advertised storage of the
     * addressed content. This set of valid shards for a digest must intersect
     * with the active shard list (workers)
     * </pre>
     *
     * <code>string cas_prefix = 10;</code>
     */
    public com.google.protobuf.ByteString
        getCasPrefixBytes() {
      java.lang.Object ref = casPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        casPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the prefix of cas set keys. A cas set for a key suffixed with a digest
     * address, contain the shards which have advertised storage of the
     * addressed content. This set of valid shards for a digest must intersect
     * with the active shard list (workers)
     * </pre>
     *
     * <code>string cas_prefix = 10;</code>
     */
    public Builder setCasPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      casPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of cas set keys. A cas set for a key suffixed with a digest
     * address, contain the shards which have advertised storage of the
     * addressed content. This set of valid shards for a digest must intersect
     * with the active shard list (workers)
     * </pre>
     *
     * <code>string cas_prefix = 10;</code>
     */
    public Builder clearCasPrefix() {
      
      casPrefix_ = getDefaultInstance().getCasPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the prefix of cas set keys. A cas set for a key suffixed with a digest
     * address, contain the shards which have advertised storage of the
     * addressed content. This set of valid shards for a digest must intersect
     * with the active shard list (workers)
     * </pre>
     *
     * <code>string cas_prefix = 10;</code>
     */
    public Builder setCasPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      casPrefix_ = value;
      onChanged();
      return this;
    }

    private int casExpire_ ;
    /**
     * <pre>
     * the expiration time in seconds for cas sets
     * </pre>
     *
     * <code>int32 cas_expire = 11;</code>
     */
    public int getCasExpire() {
      return casExpire_;
    }
    /**
     * <pre>
     * the expiration time in seconds for cas sets
     * </pre>
     *
     * <code>int32 cas_expire = 11;</code>
     */
    public Builder setCasExpire(int value) {
      
      casExpire_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the expiration time in seconds for cas sets
     * </pre>
     *
     * <code>int32 cas_expire = 11;</code>
     */
    public Builder clearCasExpire() {
      
      casExpire_ = 0;
      onChanged();
      return this;
    }

    private boolean subscribeToBackplane_ ;
    /**
     * <pre>
     * whether to listen to the backplane communication streams for shard
     * lifecycle events and watched operations. This is required for failsafe
     * operation below and realtime notification for watched operations. This is
     * nearly required for schedulers, and may be useful elsewhere
     * </pre>
     *
     * <code>bool subscribe_to_backplane = 26;</code>
     */
    public boolean getSubscribeToBackplane() {
      return subscribeToBackplane_;
    }
    /**
     * <pre>
     * whether to listen to the backplane communication streams for shard
     * lifecycle events and watched operations. This is required for failsafe
     * operation below and realtime notification for watched operations. This is
     * nearly required for schedulers, and may be useful elsewhere
     * </pre>
     *
     * <code>bool subscribe_to_backplane = 26;</code>
     */
    public Builder setSubscribeToBackplane(boolean value) {
      
      subscribeToBackplane_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * whether to listen to the backplane communication streams for shard
     * lifecycle events and watched operations. This is required for failsafe
     * operation below and realtime notification for watched operations. This is
     * nearly required for schedulers, and may be useful elsewhere
     * </pre>
     *
     * <code>bool subscribe_to_backplane = 26;</code>
     */
    public Builder clearSubscribeToBackplane() {
      
      subscribeToBackplane_ = false;
      onChanged();
      return this;
    }

    private boolean runFailsafeOperation_ ;
    /**
     * <pre>
     * whether to run the failsafe operation monitor, which establishes watchdogs
     * on watched operations, to ensure they are in a known or recently refreshed
     * state, and guaranteeing a watch's termination on expiry
     * This monitor also effects processing/dispatching expirations globally,
     * required to ensure queue reliability. This is recommended for schedulers,
     * meaningless for others
     * </pre>
     *
     * <code>bool run_failsafe_operation = 27;</code>
     */
    public boolean getRunFailsafeOperation() {
      return runFailsafeOperation_;
    }
    /**
     * <pre>
     * whether to run the failsafe operation monitor, which establishes watchdogs
     * on watched operations, to ensure they are in a known or recently refreshed
     * state, and guaranteeing a watch's termination on expiry
     * This monitor also effects processing/dispatching expirations globally,
     * required to ensure queue reliability. This is recommended for schedulers,
     * meaningless for others
     * </pre>
     *
     * <code>bool run_failsafe_operation = 27;</code>
     */
    public Builder setRunFailsafeOperation(boolean value) {
      
      runFailsafeOperation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * whether to run the failsafe operation monitor, which establishes watchdogs
     * on watched operations, to ensure they are in a known or recently refreshed
     * state, and guaranteeing a watch's termination on expiry
     * This monitor also effects processing/dispatching expirations globally,
     * required to ensure queue reliability. This is recommended for schedulers,
     * meaningless for others
     * </pre>
     *
     * <code>bool run_failsafe_operation = 27;</code>
     */
    public Builder clearRunFailsafeOperation() {
      
      runFailsafeOperation_ = false;
      onChanged();
      return this;
    }

    private int maxQueueDepth_ ;
    /**
     * <pre>
     * the maximum size allowed for the ready-to-run queue before rejection
     * </pre>
     *
     * <code>int32 max_queue_depth = 16;</code>
     */
    public int getMaxQueueDepth() {
      return maxQueueDepth_;
    }
    /**
     * <pre>
     * the maximum size allowed for the ready-to-run queue before rejection
     * </pre>
     *
     * <code>int32 max_queue_depth = 16;</code>
     */
    public Builder setMaxQueueDepth(int value) {
      
      maxQueueDepth_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the maximum size allowed for the ready-to-run queue before rejection
     * </pre>
     *
     * <code>int32 max_queue_depth = 16;</code>
     */
    public Builder clearMaxQueueDepth() {
      
      maxQueueDepth_ = 0;
      onChanged();
      return this;
    }

    private int maxPreQueueDepth_ ;
    /**
     * <pre>
     * the maximum size allowed for the arrival queue before rejection
     * </pre>
     *
     * <code>int32 max_pre_queue_depth = 17;</code>
     */
    public int getMaxPreQueueDepth() {
      return maxPreQueueDepth_;
    }
    /**
     * <pre>
     * the maximum size allowed for the arrival queue before rejection
     * </pre>
     *
     * <code>int32 max_pre_queue_depth = 17;</code>
     */
    public Builder setMaxPreQueueDepth(int value) {
      
      maxPreQueueDepth_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the maximum size allowed for the arrival queue before rejection
     * </pre>
     *
     * <code>int32 max_pre_queue_depth = 17;</code>
     */
    public Builder clearMaxPreQueueDepth() {
      
      maxPreQueueDepth_ = 0;
      onChanged();
      return this;
    }

    private build.buildfarm.v1test.ProvisionedQueuesConfig provisionedQueues_;
    private com.google.protobuf.SingleFieldBuilderV3<
        build.buildfarm.v1test.ProvisionedQueuesConfig, build.buildfarm.v1test.ProvisionedQueuesConfig.Builder, build.buildfarm.v1test.ProvisionedQueuesConfigOrBuilder> provisionedQueuesBuilder_;
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public boolean hasProvisionedQueues() {
      return provisionedQueuesBuilder_ != null || provisionedQueues_ != null;
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public build.buildfarm.v1test.ProvisionedQueuesConfig getProvisionedQueues() {
      if (provisionedQueuesBuilder_ == null) {
        return provisionedQueues_ == null ? build.buildfarm.v1test.ProvisionedQueuesConfig.getDefaultInstance() : provisionedQueues_;
      } else {
        return provisionedQueuesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public Builder setProvisionedQueues(build.buildfarm.v1test.ProvisionedQueuesConfig value) {
      if (provisionedQueuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        provisionedQueues_ = value;
        onChanged();
      } else {
        provisionedQueuesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public Builder setProvisionedQueues(
        build.buildfarm.v1test.ProvisionedQueuesConfig.Builder builderForValue) {
      if (provisionedQueuesBuilder_ == null) {
        provisionedQueues_ = builderForValue.build();
        onChanged();
      } else {
        provisionedQueuesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public Builder mergeProvisionedQueues(build.buildfarm.v1test.ProvisionedQueuesConfig value) {
      if (provisionedQueuesBuilder_ == null) {
        if (provisionedQueues_ != null) {
          provisionedQueues_ =
            build.buildfarm.v1test.ProvisionedQueuesConfig.newBuilder(provisionedQueues_).mergeFrom(value).buildPartial();
        } else {
          provisionedQueues_ = value;
        }
        onChanged();
      } else {
        provisionedQueuesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public Builder clearProvisionedQueues() {
      if (provisionedQueuesBuilder_ == null) {
        provisionedQueues_ = null;
        onChanged();
      } else {
        provisionedQueues_ = null;
        provisionedQueuesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public build.buildfarm.v1test.ProvisionedQueuesConfig.Builder getProvisionedQueuesBuilder() {
      
      onChanged();
      return getProvisionedQueuesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    public build.buildfarm.v1test.ProvisionedQueuesConfigOrBuilder getProvisionedQueuesOrBuilder() {
      if (provisionedQueuesBuilder_ != null) {
        return provisionedQueuesBuilder_.getMessageOrBuilder();
      } else {
        return provisionedQueues_ == null ?
            build.buildfarm.v1test.ProvisionedQueuesConfig.getDefaultInstance() : provisionedQueues_;
      }
    }
    /**
     * <pre>
     * the provisioned queue definitions for platform partitioning
     * </pre>
     *
     * <code>.build.buildfarm.v1test.ProvisionedQueuesConfig provisioned_queues = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        build.buildfarm.v1test.ProvisionedQueuesConfig, build.buildfarm.v1test.ProvisionedQueuesConfig.Builder, build.buildfarm.v1test.ProvisionedQueuesConfigOrBuilder> 
        getProvisionedQueuesFieldBuilder() {
      if (provisionedQueuesBuilder_ == null) {
        provisionedQueuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            build.buildfarm.v1test.ProvisionedQueuesConfig, build.buildfarm.v1test.ProvisionedQueuesConfig.Builder, build.buildfarm.v1test.ProvisionedQueuesConfigOrBuilder>(
                getProvisionedQueues(),
                getParentForChildren(),
                isClean());
        provisionedQueues_ = null;
      }
      return provisionedQueuesBuilder_;
    }

    private int timeout_ ;
    /**
     * <pre>
     * connection and socket read timeout for jedis
     * </pre>
     *
     * <code>int32 timeout = 32;</code>
     */
    public int getTimeout() {
      return timeout_;
    }
    /**
     * <pre>
     * connection and socket read timeout for jedis
     * </pre>
     *
     * <code>int32 timeout = 32;</code>
     */
    public Builder setTimeout(int value) {
      
      timeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * connection and socket read timeout for jedis
     * </pre>
     *
     * <code>int32 timeout = 32;</code>
     */
    public Builder clearTimeout() {
      
      timeout_ = 0;
      onChanged();
      return this;
    }

    private int maxAttempts_ ;
    /**
     * <pre>
     * maximum number of retries in a cluster
     * </pre>
     *
     * <code>int32 max_attempts = 33;</code>
     */
    public int getMaxAttempts() {
      return maxAttempts_;
    }
    /**
     * <pre>
     * maximum number of retries in a cluster
     * </pre>
     *
     * <code>int32 max_attempts = 33;</code>
     */
    public Builder setMaxAttempts(int value) {
      
      maxAttempts_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum number of retries in a cluster
     * </pre>
     *
     * <code>int32 max_attempts = 33;</code>
     */
    public Builder clearMaxAttempts() {
      
      maxAttempts_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:build.buildfarm.v1test.RedisShardBackplaneConfig)
  }

  // @@protoc_insertion_point(class_scope:build.buildfarm.v1test.RedisShardBackplaneConfig)
  private static final build.buildfarm.v1test.RedisShardBackplaneConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new build.buildfarm.v1test.RedisShardBackplaneConfig();
  }

  public static build.buildfarm.v1test.RedisShardBackplaneConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RedisShardBackplaneConfig>
      PARSER = new com.google.protobuf.AbstractParser<RedisShardBackplaneConfig>() {
    @java.lang.Override
    public RedisShardBackplaneConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RedisShardBackplaneConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RedisShardBackplaneConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RedisShardBackplaneConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public build.buildfarm.v1test.RedisShardBackplaneConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

