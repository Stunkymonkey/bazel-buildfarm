// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buildfarm.proto

package build.buildfarm.v1test;

public interface TreeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:build.buildfarm.v1test.Tree)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The digest of the root directory in the tree.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest rootDigest = 1;</code>
   */
  boolean hasRootDigest();
  /**
   * <pre>
   * The digest of the root directory in the tree.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest rootDigest = 1;</code>
   */
  build.bazel.remote.execution.v2.Digest getRootDigest();
  /**
   * <pre>
   * The digest of the root directory in the tree.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest rootDigest = 1;</code>
   */
  build.bazel.remote.execution.v2.DigestOrBuilder getRootDigestOrBuilder();

  /**
   * <code>map&lt;string, .build.bazel.remote.execution.v2.Directory&gt; directories = 2;</code>
   */
  int getDirectoriesCount();
  /**
   * <code>map&lt;string, .build.bazel.remote.execution.v2.Directory&gt; directories = 2;</code>
   */
  boolean containsDirectories(
      java.lang.String key);
  /**
   * Use {@link #getDirectoriesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, build.bazel.remote.execution.v2.Directory>
  getDirectories();
  /**
   * <code>map&lt;string, .build.bazel.remote.execution.v2.Directory&gt; directories = 2;</code>
   */
  java.util.Map<java.lang.String, build.bazel.remote.execution.v2.Directory>
  getDirectoriesMap();
  /**
   * <code>map&lt;string, .build.bazel.remote.execution.v2.Directory&gt; directories = 2;</code>
   */

  build.bazel.remote.execution.v2.Directory getDirectoriesOrDefault(
      java.lang.String key,
      build.bazel.remote.execution.v2.Directory defaultValue);
  /**
   * <code>map&lt;string, .build.bazel.remote.execution.v2.Directory&gt; directories = 2;</code>
   */

  build.bazel.remote.execution.v2.Directory getDirectoriesOrThrow(
      java.lang.String key);
}
