// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buildfarm.proto

package build.buildfarm.v1test;

public interface ShardWorkerConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:build.buildfarm.v1test.ShardWorkerConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.build.buildfarm.v1test.ShardWorkerInstanceConfig shard_worker_instance_config = 1;</code>
   */
  boolean hasShardWorkerInstanceConfig();
  /**
   * <code>.build.buildfarm.v1test.ShardWorkerInstanceConfig shard_worker_instance_config = 1;</code>
   */
  build.buildfarm.v1test.ShardWorkerInstanceConfig getShardWorkerInstanceConfig();
  /**
   * <code>.build.buildfarm.v1test.ShardWorkerInstanceConfig shard_worker_instance_config = 1;</code>
   */
  build.buildfarm.v1test.ShardWorkerInstanceConfigOrBuilder getShardWorkerInstanceConfigOrBuilder();

  /**
   * <code>int32 port = 2;</code>
   */
  int getPort();

  /**
   * <code>string public_name = 3;</code>
   */
  java.lang.String getPublicName();
  /**
   * <code>string public_name = 3;</code>
   */
  com.google.protobuf.ByteString
      getPublicNameBytes();

  /**
   * <pre>
   * base directory for all work being performed
   * </pre>
   *
   * <code>string root = 4;</code>
   */
  java.lang.String getRoot();
  /**
   * <pre>
   * base directory for all work being performed
   * </pre>
   *
   * <code>string root = 4;</code>
   */
  com.google.protobuf.ByteString
      getRootBytes();

  /**
   * <pre>
   * the sequence of cas into which expirations cascade
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ContentAddressableStorageConfig cas = 27;</code>
   */
  java.util.List<build.buildfarm.v1test.ContentAddressableStorageConfig> 
      getCasList();
  /**
   * <pre>
   * the sequence of cas into which expirations cascade
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ContentAddressableStorageConfig cas = 27;</code>
   */
  build.buildfarm.v1test.ContentAddressableStorageConfig getCas(int index);
  /**
   * <pre>
   * the sequence of cas into which expirations cascade
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ContentAddressableStorageConfig cas = 27;</code>
   */
  int getCasCount();
  /**
   * <pre>
   * the sequence of cas into which expirations cascade
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ContentAddressableStorageConfig cas = 27;</code>
   */
  java.util.List<? extends build.buildfarm.v1test.ContentAddressableStorageConfigOrBuilder> 
      getCasOrBuilderList();
  /**
   * <pre>
   * the sequence of cas into which expirations cascade
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ContentAddressableStorageConfig cas = 27;</code>
   */
  build.buildfarm.v1test.ContentAddressableStorageConfigOrBuilder getCasOrBuilder(
      int index);

  /**
   * <pre>
   * period of poll requests during execution
   * </pre>
   *
   * <code>.google.protobuf.Duration operation_poll_period = 13;</code>
   */
  boolean hasOperationPollPeriod();
  /**
   * <pre>
   * period of poll requests during execution
   * </pre>
   *
   * <code>.google.protobuf.Duration operation_poll_period = 13;</code>
   */
  com.google.protobuf.Duration getOperationPollPeriod();
  /**
   * <pre>
   * period of poll requests during execution
   * </pre>
   *
   * <code>.google.protobuf.Duration operation_poll_period = 13;</code>
   */
  com.google.protobuf.DurationOrBuilder getOperationPollPeriodOrBuilder();

  /**
   * <pre>
   * initial platform used to match operations
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform platform = 14;</code>
   */
  boolean hasPlatform();
  /**
   * <pre>
   * initial platform used to match operations
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform platform = 14;</code>
   */
  build.bazel.remote.execution.v2.Platform getPlatform();
  /**
   * <pre>
   * initial platform used to match operations
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform platform = 14;</code>
   */
  build.bazel.remote.execution.v2.PlatformOrBuilder getPlatformOrBuilder();

  /**
   * <pre>
   * default platform to populate matched commands
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform default_platform = 28;</code>
   */
  boolean hasDefaultPlatform();
  /**
   * <pre>
   * default platform to populate matched commands
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform default_platform = 28;</code>
   */
  build.bazel.remote.execution.v2.Platform getDefaultPlatform();
  /**
   * <pre>
   * default platform to populate matched commands
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Platform default_platform = 28;</code>
   */
  build.bazel.remote.execution.v2.PlatformOrBuilder getDefaultPlatformOrBuilder();

  /**
   * <pre>
   * total size of the inline content for
   * action results
   * </pre>
   *
   * <code>int32 inline_content_limit = 15;</code>
   */
  int getInlineContentLimit();

  /**
   * <pre>
   * input fetch width
   * </pre>
   *
   * <code>int32 input_fetch_stage_width = 26;</code>
   */
  int getInputFetchStageWidth();

  /**
   * <pre>
   * execute width
   * </pre>
   *
   * <code>int32 execute_stage_width = 16;</code>
   */
  int getExecuteStageWidth();

  /**
   * <pre>
   * symlink cas input-only directories
   * </pre>
   *
   * <code>bool link_input_directories = 17;</code>
   */
  boolean getLinkInputDirectories();

  /**
   * <pre>
   * selected hash function
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 18;</code>
   */
  int getDigestFunctionValue();
  /**
   * <pre>
   * selected hash function
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 18;</code>
   */
  build.bazel.remote.execution.v2.DigestFunction.Value getDigestFunction();

  /**
   * <pre>
   * default timeout for actions
   * if a timeout is unspecified for an action, this value
   * is imposed on it, after which the operation will
   * be killed
   * </pre>
   *
   * <code>.google.protobuf.Duration default_action_timeout = 19;</code>
   */
  boolean hasDefaultActionTimeout();
  /**
   * <pre>
   * default timeout for actions
   * if a timeout is unspecified for an action, this value
   * is imposed on it, after which the operation will
   * be killed
   * </pre>
   *
   * <code>.google.protobuf.Duration default_action_timeout = 19;</code>
   */
  com.google.protobuf.Duration getDefaultActionTimeout();
  /**
   * <pre>
   * default timeout for actions
   * if a timeout is unspecified for an action, this value
   * is imposed on it, after which the operation will
   * be killed
   * </pre>
   *
   * <code>.google.protobuf.Duration default_action_timeout = 19;</code>
   */
  com.google.protobuf.DurationOrBuilder getDefaultActionTimeoutOrBuilder();

  /**
   * <pre>
   * maximum selectable timeout
   * a maximum threshold for an action's specified timeout,
   * beyond which an action will be rejected for execution
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_action_timeout = 20;</code>
   */
  boolean hasMaximumActionTimeout();
  /**
   * <pre>
   * maximum selectable timeout
   * a maximum threshold for an action's specified timeout,
   * beyond which an action will be rejected for execution
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_action_timeout = 20;</code>
   */
  com.google.protobuf.Duration getMaximumActionTimeout();
  /**
   * <pre>
   * maximum selectable timeout
   * a maximum threshold for an action's specified timeout,
   * beyond which an action will be rejected for execution
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_action_timeout = 20;</code>
   */
  com.google.protobuf.DurationOrBuilder getMaximumActionTimeoutOrBuilder();

  /**
   * <code>.build.buildfarm.v1test.RedisShardBackplaneConfig redis_shard_backplane_config = 21;</code>
   */
  boolean hasRedisShardBackplaneConfig();
  /**
   * <code>.build.buildfarm.v1test.RedisShardBackplaneConfig redis_shard_backplane_config = 21;</code>
   */
  build.buildfarm.v1test.RedisShardBackplaneConfig getRedisShardBackplaneConfig();
  /**
   * <code>.build.buildfarm.v1test.RedisShardBackplaneConfig redis_shard_backplane_config = 21;</code>
   */
  build.buildfarm.v1test.RedisShardBackplaneConfigOrBuilder getRedisShardBackplaneConfigOrBuilder();

  /**
   * <pre>
   * available execution policies, will be used to match
   * with an action's platform for selection
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ExecutionPolicy execution_policies = 25;</code>
   */
  java.util.List<build.buildfarm.v1test.ExecutionPolicy> 
      getExecutionPoliciesList();
  /**
   * <pre>
   * available execution policies, will be used to match
   * with an action's platform for selection
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ExecutionPolicy execution_policies = 25;</code>
   */
  build.buildfarm.v1test.ExecutionPolicy getExecutionPolicies(int index);
  /**
   * <pre>
   * available execution policies, will be used to match
   * with an action's platform for selection
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ExecutionPolicy execution_policies = 25;</code>
   */
  int getExecutionPoliciesCount();
  /**
   * <pre>
   * available execution policies, will be used to match
   * with an action's platform for selection
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ExecutionPolicy execution_policies = 25;</code>
   */
  java.util.List<? extends build.buildfarm.v1test.ExecutionPolicyOrBuilder> 
      getExecutionPoliciesOrBuilderList();
  /**
   * <pre>
   * available execution policies, will be used to match
   * with an action's platform for selection
   * </pre>
   *
   * <code>repeated .build.buildfarm.v1test.ExecutionPolicy execution_policies = 25;</code>
   */
  build.buildfarm.v1test.ExecutionPolicyOrBuilder getExecutionPoliciesOrBuilder(
      int index);

  /**
   * <pre>
   * support any execution limiting, whether global or specified
   * </pre>
   *
   * <code>bool limit_execution = 31;</code>
   */
  boolean getLimitExecution();

  /**
   * <pre>
   * limit the available cores to execute_stage_width for unmetered execution if
   * set
   * </pre>
   *
   * <code>bool limit_global_execution = 29;</code>
   */
  boolean getLimitGlobalExecution();

  /**
   * <pre>
   * only allow test executions to be multicore (min-cores &gt; 1), limiting both
   * to 1 if not a test
   * </pre>
   *
   * <code>bool only_multicore_tests = 30;</code>
   */
  boolean getOnlyMulticoreTests();

  /**
   * <pre>
   * user principal name for executions
   * </pre>
   *
   * <code>string exec_owner = 32;</code>
   */
  java.lang.String getExecOwner();
  /**
   * <pre>
   * user principal name for executions
   * </pre>
   *
   * <code>string exec_owner = 32;</code>
   */
  com.google.protobuf.ByteString
      getExecOwnerBytes();

  /**
   * <pre>
   * This determines whether the shard instance will participate in the
   * backplane and cache it's operation outputs in its own cache file CAS. When
   * omitted from CAS, the worker will send its output to another worker's CAS.
   * </pre>
   *
   * <code>bool omit_from_cas = 33;</code>
   */
  boolean getOmitFromCas();

  /**
   * <code>bool error_operation_remaining_resources = 34;</code>
   */
  boolean getErrorOperationRemainingResources();

  /**
   * <code>.build.buildfarm.v1test.AdminConfig admin_config = 35;</code>
   */
  boolean hasAdminConfig();
  /**
   * <code>.build.buildfarm.v1test.AdminConfig admin_config = 35;</code>
   */
  build.buildfarm.v1test.AdminConfig getAdminConfig();
  /**
   * <code>.build.buildfarm.v1test.AdminConfig admin_config = 35;</code>
   */
  build.buildfarm.v1test.AdminConfigOrBuilder getAdminConfigOrBuilder();

  public build.buildfarm.v1test.ShardWorkerConfig.BackplaneCase getBackplaneCase();
}
